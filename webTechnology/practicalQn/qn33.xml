<!-- 
<?xml version="1.0" encoding="UTF-8"?>
 30. Create a XML Schema to validate document of experiment no 26. -->
<!-- 
answer of 30.
26. Create a program to check email address provided by the user is valid or invalid. 

<!DOCTYPE html>
<html>
  <head>
    <title>Checking Email</title>
  </head>
  <body>
    <p>Enter your email:</p>
    <input id="mail" type="email" required />
    <button type="submit" onclick="checkMe()">Check</button>

    <p id="result"></p>

    <script>
      function checkMe() {
        const mail = document.getElementById("mail").value;
        const result = document.getElementById("result");

        const mailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

        if (mailPattern.test(mail)) {
          result.textContent = "Valid Email Address";
          result.style.color = "green";
        } else {
          result.textContent = "Invalid Email Address";
          result.style.color = "red";
        }
      }
    </script>
  </body>
</html>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    
  Root element 
    <xs:element name="form">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="emailField">
                    <xs:complexType>
                        <xs:attribute name="id" type="xs:string" use="required" />
                        <xs:attribute name="type" type="xs:string" use="required" />
                        <xs:attribute name="required" type="xs:boolean" use="required" />
                    </xs:complexType>
                </xs:element>
                <xs:element name="submitButton">
                    <xs:complexType>
                        <xs:attribute name="onclick" type="xs:string" use="required" />
                    </xs:complexType>
                </xs:element>
                <xs:element name="resultField">
                    <xs:complexType>
                        <xs:attribute name="id" type="xs:string" use="required" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

</xs:schema>
 


-->

<!DOCTYPE form [
    <!ELEMENT form (emailField, submitButton, resultField)>
    
    <!-- emailField element with attributes id, type, and required -->
    <!ELEMENT emailField EMPTY>
    <!ATTLIST emailField 
        id CDATA #REQUIRED
        type CDATA #REQUIRED
        required (true | false) #REQUIRED>
    
    <!-- submitButton element with onclick attribute -->
    <!ELEMENT submitButton EMPTY>
    <!ATTLIST submitButton 
        onclick CDATA #REQUIRED>
    
    <!-- resultField element with id attribute -->
    <!ELEMENT resultField EMPTY>
    <!ATTLIST resultField 
        id CDATA #REQUIRED>
]>
